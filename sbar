#!/bin/env sh

# INIT
printf "$$" > ~/.cache/pidofbar
sec=0

# MODULES
update_cputemp () { 
	read -r cputemp </sys/class/thermal/thermal_zone4/temp
	cputemp="CPU: $((cputemp/1000))°"
}

update_cpu () {
    cpu="$(top -b -n2 -p 1 | fgrep "Cpu(s)" | tail -1 | awk -F'id,' -v prefix="$prefix" '{ split($1, vs, ","); v=vs[length(vs)]; sub("%", "", v); printf "%s%.1f%%\n", prefix, 100 - v }')"
}


update_memory () { 
    memory="$(free --mebi | sed -n '2{p;q}' | awk '{printf ("%2.2fGiB/%2.2fGiB\n", ($3 / 1024), ($2 / 1024))}')"

}

update_time () { 
	time="$(date "+[   %a %d %b   ]  [   %I:%M %P   ]")" 
}


update_bat () { 
	read -r bat_status </sys/class/power_supply/BAT0/status
	read -r bat_capacity </sys/class/power_supply/BAT0/capacity
	[ "$bat_status" = "Full" ] && bat="  $bat_capacity%"
    [ "$bat_status" = "Discharging" ] && bat="  $bat_capacity%"
    [ "$bat_status" = "Charging" ] && bat="  $bat_capacity%"
}


update_vol () { 
    vol="$(awk -F"[][]" '/Left:/ { print $2 }' <(amixer sget Master))"
}

update_mute () {
    mute="$(pacmd list-sinks | awk '/muted/ { print $2 }')"
}

update_backlight () { 
	read -r actual_brightness </sys/class/backlight/intel_backlight/actual_brightness
	read -r max_brightness </sys/class/backlight/intel_backlight/max_brightness
	backlight="$((actual_brightness*100/max_brightness))%"
}


# modules that don't update on their own need to be run at the start for getting their initial value
update_vol
update_backlight
update_mute

display () { 
    xsetroot -name " [   $memory   ]  [   $cpu   ]  [    $cputemp   ]  [    $bat   ]  [   $backlight   ]  [    $vol [  $mute   ]  $time "
}

# SIGNALLING
trap	"update_backlight;display" 	"RTMIN+1"
trap	"update_bat;display" 		"RTMIN+2"
## kill -m "$(cat ~/.cache/pidofbar)"

while true
do
	sleep 1 & wait && { 
		# to update item ever n seconds with a offset of m
		## [ $((sec % n)) -eq m ] && udpate_item
		[ $((sec % 15 )) -eq 0 ] && update_time 	
		[ $((sec % 5)) -eq 0 ] && update_cputemp 
        [ $((sec % 3)) -eq 0 ] && update_cpu
		[ $((sec % 3)) -eq 0 ] && update_memory
		[ $((sec % 15)) -eq 0 ] && update_bat
		[ $((sec % 3)) -eq 0 ] && update_backlight 
        [ $((sec % 3)) -eq 0 ] && update_vol
        [ $((sec % 3)) -eq 0 ] && update_mute
		# how often the display updates ( 5 seconds )
		[ $((sec % 1 )) -eq 0 ] && display
		sec=$((sec + 1))
	}
done 


